import{_ as s,c as n,o as e,O as a}from"./chunks/framework.97fbe135.js";const F=JSON.parse('{"title":"Identifiers","description":"","frontmatter":{},"headers":[],"relativePath":"guide/hacking-red/identifiers.md"}'),l={name:"guide/hacking-red/identifiers.md"},t=a(`<h1 id="identifiers" tabindex="-1">Identifiers <a class="header-anchor" href="#identifiers" aria-label="Permalink to &quot;Identifiers&quot;">​</a></h1><p>Identifiers are how Red manages events. They turn any string to a short string identifier that can be used efficiently over the network.</p><h2 id="identifier-generation" tabindex="-1">Identifier Generation <a class="header-anchor" href="#identifier-generation" aria-label="Permalink to &quot;Identifier Generation&quot;">​</a></h2><p>Identifiers are generated by incrementally increasing a value, and then turning that value into a string using <code>utf8.char</code>. We choose this specific function, as it will increase the length of the string as the value increases. It starts at a length of 1. At <code>2^7</code> it creates a length of 2. At <code>2^11</code> it creates a length of 3, and so on.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Most games don&#39;t use <code>2^7</code> events, so this is fine. The only issue here is if events are registered dynamically, but it&#39;s up to the library users to <strong>not</strong> do that.</p></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Serdes.</span><span style="color:#FFCB6B;">NextId</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serdes</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">RegisterIdentifier</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">utf8.char</span><span style="color:#A6ACCD;">(Serdes.</span><span style="color:#FFCB6B;">NextId</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	Serdes.</span><span style="color:#FFCB6B;">NextId</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> Id</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span></code></pre></div><h2 id="identifier-replication" tabindex="-1">Identifier Replication <a class="header-anchor" href="#identifier-replication" aria-label="Permalink to &quot;Identifier Replication&quot;">​</a></h2><p>Whenever an identifier is created, all clients need to be able to use it, so they can parse events sent using it. This is done by using attributes placed directly on <code>RedEvent</code>. As these attributes must be placed on the server to replicate, identifiers can therefor only be registered on the server.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p><code>RedEvent</code> is the RemoteEvent made by Red, and placed in <code>ReplicatedStorage</code>.</p></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Serdes.</span><span style="color:#FFCB6B;">NextId</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serdes</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">RegisterIdentifier</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Name</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">string</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">assert</span><span style="color:#A6ACCD;">(</span><span style="color:#FFCB6B;">RunService</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">IsServer</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Id </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">utf8.char</span><span style="color:#A6ACCD;">(Serdes.</span><span style="color:#FFCB6B;">NextId</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	Serdes.</span><span style="color:#FFCB6B;">NextId</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Event</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">SetAttribute</span><span style="color:#A6ACCD;">(Name, Id)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> Id</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span></code></pre></div><h2 id="one-time-identifiers" tabindex="-1">One Time Identifiers <a class="header-anchor" href="#one-time-identifiers" aria-label="Permalink to &quot;One Time Identifiers&quot;">​</a></h2><p>To facilitate returning values from function-like calls, Red uses one time identifiers. These are identifiers that are only used once, and then discarded. They are generated the same way as normal identifiers, except if the value reaches <code>0xFFFF + 1</code> it is reset back to <code>0</code>.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Serdes.</span><span style="color:#FFCB6B;">NextOT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Serdes</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">OneTime</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	Serdes.</span><span style="color:#FFCB6B;">NextOT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> Serdes.</span><span style="color:#FFCB6B;">NextOT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0xFFFF</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">		Serdes.</span><span style="color:#FFCB6B;">NextOT</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">utf8.char</span><span style="color:#A6ACCD;">(Serdes.</span><span style="color:#FFCB6B;">NextOT</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span></code></pre></div>`,13),o=[t];function p(r,c,i,y,C,A){return e(),n("div",null,o)}const D=s(l,[["render",p]]);export{F as __pageData,D as default};
