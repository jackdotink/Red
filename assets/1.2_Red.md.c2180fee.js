import{_ as o,c as t,z as s,a as n,E as l,O as e,o as p,G as c}from"./chunks/framework.97fbe135.js";const z=JSON.parse('{"title":"Red","description":"","frontmatter":{},"headers":[],"relativePath":"1.2/Red.md"}'),r={name:"1.2/Red.md"},i=s("h1",{id:"red",tabindex:"-1"},[n("Red "),s("a",{class:"header-anchor",href:"#red","aria-label":'Permalink to "Red"'},"​")],-1),y=s("p",null,"The root of the library.",-1),C=s("h2",{id:"functions",tabindex:"-1"},[n("Functions "),s("a",{class:"header-anchor",href:"#functions","aria-label":'Permalink to "Functions"'},"​")],-1),A={id:"server",tabindex:"-1"},D=s("a",{class:"header-anchor",href:"#server","aria-label":'Permalink to "Server <Badge type="tip" text="Server Only" /> <Badge type="info" text="Since 1.0.0" />"'},"​",-1),F=e(`<p>Retrieves a server namespace.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Name</span><span style="color:#A6ACCD;">: string, </span><span style="color:#676E95;font-style:italic;">-- The name of the server namespace.</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Server</span></span></code></pre></div><p>It should be noted that namespaces are global, you can call this function with the same name multiple times and you will have no issues.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-opNUN" id="tab-GS95mnm" checked="checked"><label for="tab-GS95mnm">Server</label></div><div class="blocks"><div class="language-lua active"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Net </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Server</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Namespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, { </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Event</span><span style="color:#89DDFF;">&quot; </span><span style="color:#A6ACCD;">})</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Fire</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Event</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If called on the client, this function will error.</p></div>`,5),d={id:"client",tabindex:"-1"},h=s("a",{class:"header-anchor",href:"#client","aria-label":'Permalink to "Client <Badge type="tip" text="Client Only" /> <Badge type="info" text="Since 1.0.0" />"'},"​",-1),u=e(`<p>Retrieves a client namespace.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Name</span><span style="color:#A6ACCD;">: string </span><span style="color:#676E95;font-style:italic;">-- The name of the client namespace.</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Client</span></span></code></pre></div><p>Just like with the server, client namespaces are global. You can call this function as many times as you like. Unlike the server, however, you cannot define events on the client.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-DEJo4" id="tab-lydP6TP" checked="checked"><label for="tab-lydP6TP">Client</label></div><div class="blocks"><div class="language-lua active"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Net </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Namespace</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">On</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Event</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></div></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>If called on the server, this function will error.</p></div>`,5),f={id:"spawn",tabindex:"-1"},m=s("a",{class:"header-anchor",href:"#spawn","aria-label":'Permalink to "Spawn <Badge type="info" text="Since 1.0.0" />"'},"​",-1),_=e(`<p>Spawns a new thread with thread reuse.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">&lt;T...&gt;</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">fn</span><span style="color:#A6ACCD;">: (T</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (), </span><span style="color:#676E95;font-style:italic;">-- The function to spawn.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">: T</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;"> </span><span style="color:#676E95;font-style:italic;">-- The arguments to pass to the function.</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> ()</span></span></code></pre></div><p>This function uses thread reuse and <code>task.spawn</code> to spawn threads efficiently.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Red.</span><span style="color:#82AAFF;">Spawn</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,4),g={id:"collection",tabindex:"-1"},b=s("a",{class:"header-anchor",href:"#collection","aria-label":'Permalink to "Collection <Badge type="info" text="Since 1.1.0" />"'},"​",-1),v=e(`<p>Binds code to instances based on <a href="https://developer.roblox.com/en-us/api-reference/class/CollectionService" target="_blank" rel="noreferrer">CollectionService</a> tags.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">&lt;T&gt;</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Tag</span><span style="color:#A6ACCD;">: string, </span><span style="color:#676E95;font-style:italic;">-- The tag to listen to.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Start</span><span style="color:#A6ACCD;">: (Instance) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (T), </span><span style="color:#676E95;font-style:italic;">-- The function to call when an Instance is added.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Stop</span><span style="color:#A6ACCD;">: (T) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (), </span><span style="color:#676E95;font-style:italic;">-- The function to call when an Instance is removed.</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> ())</span></span></code></pre></div><p>This function binds two functions to instances based on the tag. The first function, <code>Start</code>, is called when an instance is added to the collection, and the second function <code>Stop</code> is called when an instance is removed from the collection.</p><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>Do not yield in the <code>Start</code> function, as it can create a situation where the <code>Stop</code> function is never called. Yielding will create problems that appear silently.</p></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Red.</span><span style="color:#82AAFF;">Collection</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Tag</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Instance</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Added</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, Instance)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Instance</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Removed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, Instance)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>The real power of this function comes when you return something from the start function. Anything returned from the start function will be passed to the stop function when the instance is removed. You could use this to create a part that moves every frame while it has the tag.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Red.</span><span style="color:#82AAFF;">Collection</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Tag</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Instance</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> RunService.</span><span style="color:#FFCB6B;">Heartbeat</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Connect</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">		Instance.</span><span style="color:#FFCB6B;">CFrame</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">+=</span><span style="color:#A6ACCD;"> Instance.</span><span style="color:#FFCB6B;">CFrame</span><span style="color:#A6ACCD;">.</span><span style="color:#FFCB6B;">LookVector</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Connection</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Connection</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Disconnect</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>If you ever wanted to cleanup all instances of a tag, and stop adding more instances, call the function returned by <code>Red.Collection</code>.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Stop </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Collection</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Tag</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Instance</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Added</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, Instance)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Instance</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Removed</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, Instance)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Stop</span><span style="color:#A6ACCD;">()</span></span></code></pre></div>`,9),T={id:"ratelimit",tabindex:"-1"},S=s("a",{class:"header-anchor",href:"#ratelimit","aria-label":'Permalink to "Ratelimit <Badge type="info" text="Since 1.2.0" />"'},"​",-1),k=e(`<p>Creates a time based ratelimiter.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#C792EA;">&lt;T&gt;</span><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Limit</span><span style="color:#A6ACCD;">: number, </span><span style="color:#676E95;font-style:italic;">-- The number of times the function can be called over the interval.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Interval</span><span style="color:#A6ACCD;">: number, </span><span style="color:#676E95;font-style:italic;">-- The interval to check the limit over.</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> ((</span><span style="color:#FFCB6B;">Key</span><span style="color:#A6ACCD;">: T?) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (boolean))</span></span></code></pre></div><p>This function creates a time based ratelimiter. It takes two arguments, the limit and the interval. The limit is the number of times the function can be called over the interval. The interval is the time in seconds until the count is reset. The function returned takes one optional argument, the key. The key is used to separate the ratelimiter into different buckets. If no key is provided, the ratelimiter will use the default bucket.</p><p>When you call the returned function, it will return a boolean, true when under the ratelimit, and false when over. Note that the ratelimit is inclusive, a ratelimit of 5 will return true for the 5th call, but not the 6th.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Ratelimit </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Ratelimit</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">for</span><span style="color:#A6ACCD;"> i </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">10</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">do</span></span>
<span class="line"><span style="color:#89DDFF;">	</span><span style="color:#676E95;font-style:italic;">-- Will print true 5 times, then false 5 times.</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">Ratelimit</span><span style="color:#A6ACCD;">())</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span></span></code></pre></div><p>You can use the key to separate the ratelimiter into different buckets, this can be useful for ratelimiting events on the server.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Ratelimit </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Ratelimit</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">5</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Namespace</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">On</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Event</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Player</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">if</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">Ratelimit</span><span style="color:#A6ACCD;">(Player) </span><span style="color:#89DDFF;font-style:italic;">then</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">{Player.Name} within ratelimit</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">else</span></span>
<span class="line"><span style="color:#A6ACCD;">		</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">\`</span><span style="color:#C3E88D;">{Player.Name} over ratelimit</span><span style="color:#89DDFF;">\`</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">end</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,7),B={id:"bin",tabindex:"-1"},E=s("a",{class:"header-anchor",href:"#bin","aria-label":'Permalink to "Bin <Badge type="info" text="Since 1.2.0" />"'},"​",-1),R=e(`<p>Creates a bin.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (</span></span>
<span class="line"><span style="color:#A6ACCD;">	((Instance | RBXScriptConnection | () </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> ()),</span></span>
<span class="line"><span style="color:#A6ACCD;">	(() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> ())</span></span>
<span class="line"><span style="color:#A6ACCD;">)</span></span></code></pre></div><p>This function creates a bin, this is similar to the common &quot;Maid&quot; object. This returns two functions, the first to add items to the bin, and the second to Empty the bin. A bin can accept instances, connections, and functions. When the bin is emptied, it will destroy all instances, disconnect all connections, and call all functions.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Add, Empty </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Bin</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Add</span><span style="color:#A6ACCD;">(Instance.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Part</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#82AAFF;">Add</span><span style="color:#A6ACCD;">(Instance.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Part</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">).</span><span style="color:#FFCB6B;">Touched</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Connect</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">()</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">))</span></span>
<span class="line"><span style="color:#82AAFF;">Add</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#82AAFF;">Empty</span><span style="color:#A6ACCD;">()</span></span></code></pre></div><h2 id="properties" tabindex="-1">Properties <a class="header-anchor" href="#properties" aria-label="Permalink to &quot;Properties&quot;">​</a></h2>`,5),P={id:"promise",tabindex:"-1"},q=s("a",{class:"header-anchor",href:"#promise","aria-label":'Permalink to "Promise <Badge type="info" text="Since 1.0.0" />"'},"​",-1),w=e(`<p>A reference to the Red <a href="./Promise.html">Promise</a> implementation. This implementation differs from the main library used, it provides autocomplete, it uses PascalCase and has better performance.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Red.</span><span style="color:#FFCB6B;">Promise</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">Reject</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Then</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,2),I={id:"signal",tabindex:"-1"},x=s("a",{class:"header-anchor",href:"#signal","aria-label":'Permalink to "Signal <Badge type="info" text="Since 1.0.0" />"'},"​",-1),N=e(`<p>A reference to the Red <a href="./Signal.html">Signal</a> implementation. This implementation is almost identical to other implementations, it just uses the Red Promise implementation, and is also typesafe.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Signal </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#FFCB6B;">Signal</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Signal</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Connect</span><span style="color:#A6ACCD;">(</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#FFCB6B;">Signal</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Fire</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,2),V={id:"clock",tabindex:"-1"},W=s("a",{class:"header-anchor",href:"#clock","aria-label":'Permalink to "Clock <Badge type="info" text="Since 1.0.0" />"'},"​",-1),O=e(`<p>A reference to the <a href="./Clock.html">Clock</a> object. This object is used to run a callback at consistent intervals.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Clock </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#FFCB6B;">Clock</span><span style="color:#A6ACCD;">.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">()</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, World!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,2);function H(G,j,Y,$,J,L){const a=c("Badge");return p(),t("div",null,[i,y,C,s("h3",A,[n("Server "),l(a,{type:"tip",text:"Server Only"}),n(),l(a,{type:"info",text:"Since 1.0.0"}),n(),D]),F,s("h3",d,[n("Client "),l(a,{type:"tip",text:"Client Only"}),n(),l(a,{type:"info",text:"Since 1.0.0"}),n(),h]),u,s("h3",f,[n("Spawn "),l(a,{type:"info",text:"Since 1.0.0"}),n(),m]),_,s("h3",g,[n("Collection "),l(a,{type:"info",text:"Since 1.1.0"}),n(),b]),v,s("h3",T,[n("Ratelimit "),l(a,{type:"info",text:"Since 1.2.0"}),n(),S]),k,s("h2",B,[n("Bin "),l(a,{type:"info",text:"Since 1.2.0"}),n(),E]),R,s("h3",P,[n("Promise "),l(a,{type:"info",text:"Since 1.0.0"}),n(),q]),w,s("h3",I,[n("Signal "),l(a,{type:"info",text:"Since 1.0.0"}),n(),x]),N,s("h3",V,[n("Clock "),l(a,{type:"info",text:"Since 1.0.0"}),n(),W]),O])}const K=o(r,[["render",H]]);export{z as __pageData,K as default};
