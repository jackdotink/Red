import{_ as s,c as n,o as a,O as e}from"./chunks/framework.97fbe135.js";const A=JSON.parse('{"title":"Sending and Invoking Events","description":"","frontmatter":{},"headers":[],"relativePath":"guide/namespaces/sending-invoking-events.md"}'),l={name:"guide/namespaces/sending-invoking-events.md"},o=e(`<h1 id="sending-and-invoking-events" tabindex="-1">Sending and Invoking Events <a class="header-anchor" href="#sending-and-invoking-events" aria-label="Permalink to &quot;Sending and Invoking Events&quot;">​</a></h1><p>You&#39;ve now learned what namespaces and events are, how to create namespaces, and how to listen to events. In this section you&#39;ll learn how to send and invoke events.</p><h2 id="the-difference-between-signal-like-and-function-like-events" tabindex="-1">The Difference Between Signal-Like and Function-Like Events <a class="header-anchor" href="#the-difference-between-signal-like-and-function-like-events" aria-label="Permalink to &quot;The Difference Between Signal-Like and Function-Like Events&quot;">​</a></h2><p>As you might remember from the last section, the difference is not decided in how they are listened to, but instead in how they are called.</p><p>Signal-like events are sent, and will not take back a return value. Function-like events are sent, and then wait for a returns to be sent back. A signal-like event could be called as a function, and function-like events can be called as signals. The only difference in behavior is how they are called, and the return value.</p><h2 id="sending-signal-like-events" tabindex="-1">Sending Signal-Like Events <a class="header-anchor" href="#sending-signal-like-events" aria-label="Permalink to &quot;Sending Signal-Like Events&quot;">​</a></h2><p>Signal-like events are events that are fired and listened to. They do not return values back to the caller. You can send these by using the <code>Fire</code> method (or a variant on the server).</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-ewQyl" id="tab-iasBGi2" checked="checked"><label for="tab-iasBGi2">Server</label><input type="radio" name="group-ewQyl" id="tab-ajE8nhu"><label for="tab-ajE8nhu">Client</label></div><div class="blocks"><div class="language-lua active"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Net </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Server</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NamespaceName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- Fires a single player</span></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Fire</span><span style="color:#A6ACCD;">(Player, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- Fires all players</span></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">FireAll</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- Fires all players except the specified player</span></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">FireAllExcept</span><span style="color:#A6ACCD;">(Player, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- Fires a list of players</span></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">FireList</span><span style="color:#A6ACCD;">({ Player }, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- Fires all players that match the filter</span></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">FireWithFilter</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Player</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> Player.</span><span style="color:#FFCB6B;">Name</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">==</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Uncontained0</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">true</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Net </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NamespaceName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- Fires the server</span></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Fire</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></div></div><h2 id="sending-function-like-events" tabindex="-1">Sending Function-Like Events <a class="header-anchor" href="#sending-function-like-events" aria-label="Permalink to &quot;Sending Function-Like Events&quot;">​</a></h2><p>Function-like events are events that are called, and the listener returns values back to the caller. You can send these by using the <code>Call</code> method on the client. The server cannot call function-like events on the client.</p><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-2BzRs" id="tab-CXiHbXj" checked="checked"><label for="tab-CXiHbXj">Client</label><input type="radio" name="group-2BzRs" id="tab-F1BdyUb"><label for="tab-F1BdyUb">Server</label></div><div class="blocks"><div class="language-lua active"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Net </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Client</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NamespaceName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#676E95;font-style:italic;">-- Calls the server</span></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">Call</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">1</span><span style="color:#A6ACCD;">, </span><span style="color:#F78C6C;">2</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Result</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Result)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">local</span><span style="color:#A6ACCD;"> Net </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> Red.</span><span style="color:#82AAFF;">Server</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">NamespaceName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"></span>
<span class="line"><span style="color:#FFCB6B;">Net</span><span style="color:#A6ACCD;">:</span><span style="color:#82AAFF;">On</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">EventName</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">, </span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Player</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">A</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">B</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#89DDFF;font-style:italic;">return</span><span style="color:#A6ACCD;"> A </span><span style="color:#89DDFF;">+</span><span style="color:#A6ACCD;"> B</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div></div></div><p>As you can see, the <code>Call</code> method returns a promise. You can learn more about Red promises in the API Reference.</p>`,12),t=[o];function p(c,r,i,y,D,F){return a(),n("div",null,t)}const d=s(l,[["render",p]]);export{A as __pageData,d as default};
