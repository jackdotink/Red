import{_ as o,c as t,z as a,a as s,E as e,O as l,o as p,G as c}from"./chunks/framework.e854fd36.js";const G=JSON.parse('{"title":"Promise","description":"","frontmatter":{},"headers":[],"relativePath":"1.2/Promise.md"}'),r={name:"1.2/Promise.md"},i={id:"promise",tabindex:"-1"},y=a("a",{class:"header-anchor",href:"#promise","aria-label":'Permalink to "Promise <Badge type="info" text="Since 1.0.0" />"'},"​",-1),C=a("p",null,[s("Promises are a way to handle asynchronous code in a synchronous manner. They are similar to the "),a("code",null,"Promise"),s(" class in JavaScript. This documentation assumes you already have a basic understanding of promises.")],-1),A=a("h2",{id:"functions",tabindex:"-1"},[s("Functions "),a("a",{class:"header-anchor",href:"#functions","aria-label":'Permalink to "Functions"'},"​")],-1),D={id:"new",tabindex:"-1"},d=a("a",{class:"header-anchor",href:"#new","aria-label":'Permalink to "new <Badge type="info" text="Since 1.0.0" />"'},"​",-1),F=l(`<p>Creates a new promise.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">Callback</span><span style="color:#A6ACCD;">: (</span><span style="color:#FFCB6B;">Resolve</span><span style="color:#A6ACCD;">: (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (), </span><span style="color:#FFCB6B;">Reject</span><span style="color:#A6ACCD;">: (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> ()) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (),</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Promise</span></span></code></pre></div><p>This function immediately calls the callback in a new thread with two functions, Resolve and Reject. These functions are used, as their names imply, to resolve or reject the promise.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>You can pass multiple values to Resolve and Reject.</p></div><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Resolve and reject can only be called once. On the next execution step after either of these functions are called, the promise thread will be closed.</p></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Promise.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">Reject</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,6),h={id:"resolve",tabindex:"-1"},u=a("a",{class:"header-anchor",href:"#resolve","aria-label":'Permalink to "Resolve <Badge type="info" text="Since 1.0.0" />"'},"​",-1),_=l('<p>Creates a new promise that is already resolved.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Promise</span></span></code></pre></div><p>This function creates a new promise that is already resolved with the values passed to it.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use this function for synchronous code, it&#39;s about 10x faster than <code>Promise.new</code>.</p></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Promise.</span><span style="color:#82AAFF;">Resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>',5),m={id:"reject",tabindex:"-1"},f=a("a",{class:"header-anchor",href:"#reject","aria-label":'Permalink to "Reject <Badge type="info" text="Since 1.0.0" />"'},"​",-1),g=l('<p>Creates a new promise that is already rejected.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Promise</span></span></code></pre></div><p>This function creates a new promise that is already rejected with the values passed to it.</p><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>Use this function for synchronous code, it&#39;s about 10x faster than <code>Promise.new</code>.</p></div><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Promise.</span><span style="color:#82AAFF;">Reject</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span></code></pre></div><h2 id="methods" tabindex="-1">Methods <a class="header-anchor" href="#methods" aria-label="Permalink to &quot;Methods&quot;">​</a></h2>',6),v={id:"then",tabindex:"-1"},b=a("a",{class:"header-anchor",href:"#then","aria-label":'Permalink to "Then <Badge type="info" text="Since 1.0.0" />"'},"​",-1),T=l(`<p>Chains from a promise to another promise.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">OnResolve</span><span style="color:#A6ACCD;">: ((</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any))?,</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">OnReject</span><span style="color:#A6ACCD;">: ((</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any))?,</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Promise</span></span></code></pre></div><p>This function returns a new promise that is resolved or rejected based on the return value of the callback functions. This should exactly match the <a href="https://promisesaplus.com/" target="_blank" rel="noreferrer">A+ Spec</a>.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Promise.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">Reject</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Then</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Value</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Value) </span><span style="color:#676E95;font-style:italic;">-- Hello, world!</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,4),P={id:"catch",tabindex:"-1"},w=a("a",{class:"header-anchor",href:"#catch","aria-label":'Permalink to "Catch <Badge type="info" text="Since 1.0.0" />"'},"​",-1),R=l(`<p>Chains from a promise to another promise, but only if the promise is rejected.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">OnReject</span><span style="color:#A6ACCD;">: ((</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any))?,</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Promise</span></span></code></pre></div><p>This function is the equivalent of <code>Promise:Then(nil, OnReject)</code>.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Promise.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">Reject</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Reject</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Catch</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Value</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Value) </span><span style="color:#676E95;font-style:italic;">-- Hello, world!</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,4),S={id:"finally",tabindex:"-1"},k=a("a",{class:"header-anchor",href:"#finally","aria-label":'Permalink to "Finally <Badge type="info" text="Since 1.0.0" />"'},"​",-1),x=l(`<p>Chains from a promise to another promise, but is always called.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">(</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#FFCB6B;">OnFinally</span><span style="color:#A6ACCD;">: ((</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any))?,</span></span>
<span class="line"><span style="color:#A6ACCD;">) </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> Promise</span></span></code></pre></div><p>This function is the equivalent of <code>Promise:Then(OnFinally, OnFinally)</code>.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Promise.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">Reject</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Finally</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Value</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">print</span><span style="color:#A6ACCD;">(Value) </span><span style="color:#676E95;font-style:italic;">-- Hello, world!</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">)</span></span></code></pre></div>`,4),B={id:"await",tabindex:"-1"},j=a("a",{class:"header-anchor",href:"#await","aria-label":'Permalink to "Await <Badge type="warning" text="Yields" /> <Badge type="info" text="Since 1.0.0" />"'},"​",-1),V=l(`<p>Waits for a promise to resolve or reject.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">() </span><span style="color:#89DDFF;">-&gt;</span><span style="color:#A6ACCD;"> (</span><span style="color:#89DDFF;">...</span><span style="color:#A6ACCD;">any)</span></span></code></pre></div><p>This function will wait for the promise to resolve or reject. If the promise is resolved, the values passed to Resolve will be returned. If the promise is rejected, the call will error with the first rejection value.</p><div class="language-lua"><button title="Copy Code" class="copy"></button><span class="lang">lua</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">Promise.</span><span style="color:#82AAFF;">new</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;font-style:italic;">function</span><span style="color:#89DDFF;">(</span><span style="color:#A6ACCD;font-style:italic;">Resolve</span><span style="color:#89DDFF;">,</span><span style="color:#A6ACCD;"> </span><span style="color:#A6ACCD;font-style:italic;">Reject</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#A6ACCD;">	</span><span style="color:#82AAFF;">Resolve</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">Hello, world!</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">)</span></span>
<span class="line"><span style="color:#89DDFF;font-style:italic;">end</span><span style="color:#A6ACCD;">):</span><span style="color:#82AAFF;">Await</span><span style="color:#A6ACCD;">() </span><span style="color:#676E95;font-style:italic;">-- Hello, world!</span></span></code></pre></div>`,4);function E(I,q,N,H,O,$){const n=c("Badge");return p(),t("div",null,[a("h1",i,[s("Promise "),e(n,{type:"info",text:"Since 1.0.0"}),s(),y]),C,A,a("h3",D,[s("new "),e(n,{type:"info",text:"Since 1.0.0"}),s(),d]),F,a("h3",h,[s("Resolve "),e(n,{type:"info",text:"Since 1.0.0"}),s(),u]),_,a("h3",m,[s("Reject "),e(n,{type:"info",text:"Since 1.0.0"}),s(),f]),g,a("h3",v,[s("Then "),e(n,{type:"info",text:"Since 1.0.0"}),s(),b]),T,a("h3",P,[s("Catch "),e(n,{type:"info",text:"Since 1.0.0"}),s(),w]),R,a("h3",S,[s("Finally "),e(n,{type:"info",text:"Since 1.0.0"}),s(),k]),x,a("h3",B,[s("Await "),e(n,{type:"warning",text:"Yields"}),s(),e(n,{type:"info",text:"Since 1.0.0"}),s(),j]),V])}const J=o(r,[["render",E]]);export{G as __pageData,J as default};
